"brightside" is a codebase implementing online variational inference
for a variety of Bayesian nonparametric topic models.  It also contains
some utilities concerning geo-tagged Twitter data, ALNC, and Freebase.

Currently four observational models, HDP, sHDP, M0, and M1, are
implemented.  HDP is the hierarchical Dirichlet process topic model
from the literature.[1]  sHDP is a depth-two (three-level) HDP in which
M topic mixtures are drawn from the global topic mixture, each
document's topic mixture is drawn from one of those M classes, and each
document's class is observed.  M0 is the nested hierarchical Dirichlet
process (nHDP) topic model from the literature.[2]  M1 is a personalized
topic model, based on M0, in which each user draws a topic tree from the
global tree, each document is a path from a user's tree, and each token
is drawn from a topic along the corresponding document's path.  See
notes/ for technical details.

The inference code is based on onlinehdp[3], which was in turn based on
onlinelda[4], according to comments in the onlinehdp source.

Dependencies (in addition to pylowl dependencies):
* numpy and scipy
* d3, for visualization (v3, included with source)
* a web browser supporting javascript, for visualization
* python-concrete and python-thrift (3.3pre)

To get up and running quickly, build littleowl with brightside included
and invoke src/pylowl/proj/brightside/m0/run_src.py to train on the
littleowl source tree.  From the littleowl repository root:

$ python setup.py build --with-proj-brightside
$ export PYTHONPATH="$PWD/build/lib.linux-x86_64-2.7:$PYTHONPATH"
$ export PYTHONOPTIMIZE=1
$ python src/pylowl/proj/brightside/m0/run_src.py

run_src.py is short---I suggest reading it.  At a high level, it
creates a toy concrete dataset from the source tree, runs M0 for a
few minute, does all postprocessing needed for visualization, and
symlinks the visualization code to the M0 model output directory.
When it's done, all that stands between you and a colorful topic
tree is a web server.

You can see command-line arguments for learning parameters, etc. with:
$ python -m pylowl.proj.brightside.m0.run -h

Other models are invoked similarly.  In particular, there are run_src.py
scripts under m0/ as well as m1/, hdp/, and shdp/.  For example, to
learn an sHDP model on the source tree, using filename extensions as
classes, do:

$ python src/pylowl/proj/brightside/shdp/run_src.py

[1] http://www.cs.princeton.edu/~chongw/papers/WangPaisleyBlei2011.pdf
    (Wang, Paisley, and Blei (2011))
[2] arXiv:1210.6738
    (Paisley, Wang, Blei, and Jordan (2014))
[3] http://www.cs.cmu.edu/~chongw/software/onlinehdp.tar.gz
    (Wang, Paisley, and Blei (2011))
[4] http://www.cs.princeton.edu/~blei/downloads/onlineldavb.tar
    (Hoffman, Blei, and Bach (2010))
